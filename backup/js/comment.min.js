/*!
 * jQuery Raty - A Star Rating Plugin
 *
 * Licensed under The MIT License
 *
 * @version        2.4.5
 * @author         Washington Botelho
 * @documentation  wbotelhos.com/raty
 *
 */
; (function (b) { var a = { init: function (c) { return this.each(function () { var d = this, h = b(d).empty(); d.opt = b.extend(true, {}, b.fn.raty.defaults, c); h.data("settings", d.opt); d.opt.number = a.between(d.opt.number, 0, 20); if (d.opt.path.substring(d.opt.path.length - 1, d.opt.path.length) != "/") { d.opt.path += "/"; } if (typeof d.opt.score == "function") { d.opt.score = d.opt.score.call(d); } if (d.opt.score) { d.opt.score = a.between(d.opt.score, 0, d.opt.number); } for (var e = 1; e <= d.opt.number; e++) { b("<img />", { src: d.opt.path + ((!d.opt.score || d.opt.score < e) ? d.opt.starOff : d.opt.starOn), alt: e, title: (e <= d.opt.hints.length && d.opt.hints[e - 1] !== null) ? d.opt.hints[e - 1] : e }).appendTo(d); if (d.opt.space) { h.append((e < d.opt.number) ? "&#160;" : ""); } } d.stars = h.children('img:not(".raty-cancel")'); d.score = b("<input />", { type: "hidden", name: d.opt.scoreName }).appendTo(d); if (d.opt.score && d.opt.score > 0) { d.score.val(d.opt.score); a.roundStar.call(d, d.opt.score); } if (d.opt.iconRange) { a.fill.call(d, d.opt.score); } a.setTarget.call(d, d.opt.score, d.opt.targetKeep); var g = d.opt.space ? 4 : 0, f = d.opt.width || (d.opt.number * d.opt.size + d.opt.number * g); if (d.opt.cancel) { d.cancel = b("<img />", { src: d.opt.path + d.opt.cancelOff, alt: "x", title: d.opt.cancelHint, "class": "raty-cancel" }); if (d.opt.cancelPlace == "left") { h.prepend("&#160;").prepend(d.cancel); } else { h.append("&#160;").append(d.cancel); } f += (d.opt.size + g); } if (d.opt.readOnly) { a.fixHint.call(d); if (d.cancel) { d.cancel.hide(); } } else { h.css("cursor", "pointer"); a.bindAction.call(d); } }); }, between: function (e, d, c) { return Math.min(Math.max(parseFloat(e), d), c); }, bindAction: function () { var c = this, e = b(c); e.mouseleave(function () { var f = c.score.val() || undefined; a.initialize.call(c, f); a.setTarget.call(c, f, c.opt.targetKeep); if (c.opt.mouseover) { c.opt.mouseover.call(c, f); } }); var d = c.opt.half ? "mousemove" : "mouseover"; if (c.opt.cancel) { c.cancel.mouseenter(function () { b(this).attr("src", c.opt.path + c.opt.cancelOn); c.stars.attr("src", c.opt.path + c.opt.starOff); a.setTarget.call(c, null, true); if (c.opt.mouseover) { c.opt.mouseover.call(c, null); } }).mouseleave(function () { b(this).attr("src", c.opt.path + c.opt.cancelOff); if (c.opt.mouseover) { c.opt.mouseover.call(c, c.score.val() || null); } }).click(function (f) { c.score.removeAttr("value"); if (c.opt.click) { c.opt.click.call(c, null, f); } }); } c.stars.bind(d, function (g) { var h = parseInt(this.alt, 10); if (c.opt.half) { var f = parseFloat((g.pageX - b(this).offset().left) / c.opt.size), i = (f > 0.5) ? 1 : 0.5; h = parseFloat(this.alt) - 1 + i; a.fill.call(c, h); if (c.opt.precision) { h = h - i + f; } a.showHalf.call(c, h); } else { a.fill.call(c, h); } e.data("score", h); a.setTarget.call(c, h, true); if (c.opt.mouseover) { c.opt.mouseover.call(c, h, g); } }).click(function (f) { c.score.val((c.opt.half || c.opt.precision) ? e.data("score") : this.alt); if (c.opt.click) { c.opt.click.call(c, c.score.val(), f); } }); }, cancel: function (c) { return b(this).each(function () { var d = this, e = b(d); if (e.data("readonly") === true) { return this; } if (c) { a.click.call(d, null); } else { a.score.call(d, null); } d.score.removeAttr("value"); }); }, click: function (c) { return b(this).each(function () { if (b(this).data("readonly") === true) { return this; } a.initialize.call(this, c); if (this.opt.click) { this.opt.click.call(this, c); } else { a.error.call(this, 'you must add the "click: function(score, evt) { }" callback.'); } a.setTarget.call(this, c, true); }); }, error: function (c) { b(this).html(c); b.error(c); }, fill: function (k) { var c = this, h = c.stars.length, g = 0, d, j, f; for (var e = 1; e <= h; e++) { d = c.stars.eq(e - 1); if (c.opt.iconRange && c.opt.iconRange.length > g) { j = c.opt.iconRange[g]; if (c.opt.single) { f = (e == k) ? (j.on || c.opt.starOn) : (j.off || c.opt.starOff); } else { f = (e <= k) ? (j.on || c.opt.starOn) : (j.off || c.opt.starOff); } if (e <= j.range) { d.attr("src", c.opt.path + f); } if (e == j.range) { g++; } } else { if (c.opt.single) { f = (e == k) ? c.opt.starOn : c.opt.starOff; } else { f = (e <= k) ? c.opt.starOn : c.opt.starOff; } d.attr("src", c.opt.path + f); } } }, fixHint: function () { var c = b(this), e = parseInt(this.score.val(), 10), d = this.opt.noRatedMsg; if (!isNaN(e) && e > 0) { d = (e <= this.opt.hints.length && this.opt.hints[e - 1] !== null) ? this.opt.hints[e - 1] : e; } c.data("readonly", true).css("cursor", "default").attr("title", d); this.score.attr("readonly", "readonly"); this.stars.attr("title", d); }, getScore: function () { var d = [], c; b(this).each(function () { c = this.score.val(); d.push(c ? parseFloat(c) : undefined); }); return (d.length > 1) ? d : d[0]; }, readOnly: function (c) { return this.each(function () { var d = b(this); if (d.data("readonly") === c) { return this; } if (this.cancel) { if (c) { this.cancel.hide(); } else { this.cancel.show(); } } if (c) { d.unbind(); d.children("img").unbind(); a.fixHint.call(this); } else { a.bindAction.call(this); a.unfixHint.call(this); } d.data("readonly", c); }); }, reload: function () { return a.set.call(this, {}); }, roundStar: function (e) { var d = (e - Math.floor(e)).toFixed(2); if (d > this.opt.round.down) { var c = this.opt.starOn; if (d < this.opt.round.up && this.opt.halfShow) { c = this.opt.starHalf; } else { if (d < this.opt.round.full) { c = this.opt.starOff; } } this.stars.eq(Math.ceil(e) - 1).attr("src", this.opt.path + c); } }, score: function () { return arguments.length ? a.setScore.apply(this, arguments) : a.getScore.call(this); }, set: function (c) { this.each(function () { var d = b(this), f = d.data("settings"), e = d.clone().removeAttr("style").insertBefore(d); d.remove(); e.raty(b.extend(f, c)); }); return b(this.selector); }, setScore: function (c) { return b(this).each(function () { if (b(this).data("readonly") === true) { return this; } a.initialize.call(this, c); a.setTarget.call(this, c, true); }); }, setTarget: function (e, d) { if (this.opt.target) { var c = b(this.opt.target); if (c.length == 0) { a.error.call(this, "target selector invalid or missing!"); } var f = e; if (!d || f === undefined) { f = this.opt.targetText; } else { if (this.opt.targetType == "hint") { f = (f === null && this.opt.cancel) ? this.opt.cancelHint : this.opt.hints[Math.ceil(f - 1)]; } else { f = this.opt.precision ? parseFloat(f).toFixed(1) : parseInt(f, 10); } } if (this.opt.targetFormat.indexOf("{score}") < 0) { a.error.call(this, 'template "{score}" missing!'); } if (e !== null) { f = this.opt.targetFormat.toString().replace("{score}", f); } if (c.is(":input")) { c.val(f); } else { c.html(f); } } }, showHalf: function (d) { var c = (d - Math.floor(d)).toFixed(1); if (c > 0 && c < 0.6) { this.stars.eq(Math.ceil(d) - 1).attr("src", this.opt.path + this.opt.starHalf); } }, initialize: function (c) { c = !c ? 0 : a.between(c, 0, this.opt.number); a.fill.call(this, c); if (c > 0) { if (this.opt.halfShow) { a.roundStar.call(this, c); } this.score.val(c); } }, unfixHint: function () { for (var c = 0; c < this.opt.number; c++) { this.stars.eq(c).attr("title", (c < this.opt.hints.length && this.opt.hints[c] !== null) ? this.opt.hints[c] : c); } b(this).data("readonly", false).css("cursor", "pointer").removeAttr("title"); this.score.attr("readonly", "readonly"); } }; b.fn.raty = function (c) { if (a[c]) { return a[c].apply(this, Array.prototype.slice.call(arguments, 1)); } else { if (typeof c === "object" || !c) { return a.init.apply(this, arguments); } else { b.error("Method " + c + " does not exist!"); } } }; b.fn.raty.defaults = { cancel: false, cancelHint: "cancel this rating!", cancelOff: "cancel-off.png", cancelOn: "cancel-on.png", cancelPlace: "left", click: undefined, half: false, halfShow: true, hints: ["bad", "poor", "regular", "good", "gorgeous"], iconRange: undefined, mouseover: undefined, noRatedMsg: "not rated yet", number: 5, path: "img/", precision: false, round: { down: 0.25, full: 0.6, up: 0.76 }, readOnly: false, score: undefined, scoreName: "score", single: false, size: 16, space: true, starHalf: "star-half.png", starOff: "star-off.png", starOn: "star-on.png", target: undefined, targetFormat: "{score}", targetKeep: false, targetText: "", targetType: "hint" }; })(jQuery);

var journalItem = {}; journalItem.JournalType = "status", journalItem.Title = "", journalItem.Summary = "", journalItem.Body = "", journalItem.ItemData = null, journalItem.Security = "E"; var cancelRequest = !1;
function pluginInit() { journalOptions.fullName.length && $(".txtFullName").val(journalOptions.fullName), journalOptions.email.length && $(".txtEmail").val(journalOptions.email), $(".cmtname").val($(".txtFullName").val()), $(".cmtemail").val($(".txtEmail").val()), $(".jcmt").each(function (a) { $(this).journalComments(commentOpts) }), $('a[id^="cmtbtn-"]').bind("click", function (a) { a.preventDefault(); var b = $(this).attr("id").replace("cmtbtn-", ""), c = $("#jcmt-" + b + " .cmteditarea"), d = $("#jcmt-" + b + " .cmtbtn"), e = $("#jcmt-" + b + " .cmtbtn a"), f = $("#jcmt-" + b + " .cmtbtn .cmtinfo"); if ("none" == c.css("display")) c.show(), e.addClass("disabled"), d.show(); else { var g = $("#jcmt-" + b + " .cmteditor"), h = $("#jcmt-" + b + " .editorPlaceholder"); g.animate({ height: "0" }, 400, function () { d.hide(), e.addClass("disabled"), f.hide(), g.text("").hide(), c.hide(), h.show() }) } }), $('a[id^="like-"]').bind("click", likeComment) } function buildLikes(a, b) { $("#like-" + b).fadeOut(function () { $(this).html(a).fadeIn() }) } function likeComment() { var a = $(this).attr("id").replace("like-", ""); return journalPost("Like", buildLikes, a), !1 } function journalReport(a) { var b = a.id.replace("report-", ""); journalPost("Report", reportCallback, b) } function reportCallback(a, b) { $("#report-" + b).html(journalOptions.reportSuccessfullyText) } function journalDelete(a) { if (confirm(journalOptions.deleteConfirmText)) { var b = a.parentNode.parentNode.id.replace("jid-", ""); journalPost("Delete", deleteCallback, b) } } function deleteCallback(a, b) { $("#jid-" + b).slideUp(function () { $(this).remove() }) } function journalPost(a, b, c) { $.ajax({ type: "POST", url:  "/Product/Services/CommentService.asmx/" + a, data: { commentId: c }, success: function (a) { "undefined" != typeof b && b(a, c) }, error: function (a, b, c) { alert(c) } }) } !function (a, b) { "use strict"; function c() { journalItem = {}, journalItem.JournalType = "status", journalItem.Title = "", journalItem.Summary = "", journalItem.Body = "", journalItem.ItemData = null, journalItem.Security = "E", journalItem.Tags = [], journalItem.Users = [] } a.fn.journalTools = function (d) { function t() { i.hide(), j.hide(), p = !1, h.addClass("disabled"), m.data("linkedUp", !1), m.unbind("keypress", s), m.animate({ height: "0" }, 400, function () { m.val("").hide(), g.show(), c() }) } a.fn.journalTools.defaultOptions = { placeHolder: ".journalPlaceholder", shareButton: ".btnShare", closeButton: ".journalClose", info: ".journalInfo", fullName: ".txtFullName", email: ".txtEmail", content: ".journalContent", items: ".journalItems", pager: ".commentpager a", securityMenu: ".securityMenu", maxLength: 2e3 }; var e = a.extend({}, a.fn.journalTools.defaultOptions, d), f = this, g = f.find(e.placeHolder), h = f.find(e.shareButton), i = f.find(e.closeButton), j = f.find(e.info), k = f.find(e.fullName), l = f.find(e.email), m = f.find(e.content), n = f.find(e.items), o = f.find(e.pager), p = !1, q = e.maxLength, r = f.find(e.securityMenu), s = function (a) { h.removeClass("disabled"), h.unbind("keypress", s) }; r.find(".handle").click(function () { r.toggle() }), a(e.securityMenu + " input").click(function () { journalItem.Security = a(this).val() }), g.click(function () { u() }), i.click(function () { t() }), m.bind("keypress", function (a) { if (8 != a.keyCode && 46 != a.keyCode) return !(m.val().length >= q) && void 0 }), m.bind("paste", function (a) { setTimeout(function () { if (m.val(m.val()), m.val().length >= q) { var a = m.val().substring(0, q); m.val(a) } }, 100) }); var u = function () { g.hide(), j.show(), h.addClass("disabled"), m.show().animate({ height: "+=65" }, 400, function () { p = !0, m.focus(), m.bind("keypress", s), i.show() }) }; h.click(function (b) { cancelRequest = !0, b.preventDefault(); var c = {}; if (c.productId = journalOptions.productId, c.commentType = h.parents(".commentpanel").attr("data-type"), c.fullName = encodeURIComponent(k.val()), c.email = encodeURIComponent(l.val()), c.content = encodeURIComponent(m.val()), c.rating = a(".comment-form .rating input[name='score']").val(), "" == c.content || "%3Cbr%3E" == c.content) return alert(journalOptions.contentRequiredText), m.focus(), !1; if ("" == c.fullName) return alert(journalOptions.fullNameRequiredText), k.focus(), !1; var d = m.val(); return d = d.replace(/<(?:.|\n)*?>/gm, "").replace(/\s+/g, "").replace(/&nbsp;/g, ""), "" == d ? (alert(journalOptions.contentInvalidText), m.focus(), !1) : void a.ajax({ type: "POST", url:  "/Product/Services/CommentService.asmx/CreateRating", data: c, success: function (b) { "" != b && " " != b && (a(b).hide().prependTo(n).fadeIn(), m.val(""), pluginInit(), a(".btnloadcm").click()) }, error: function (a, b, c) { alert(c) } }) }), o.bind("click", function (c) { c.preventDefault(); var d = a(this), e = d.attr("href"), f = e.split("cmtpg="); 0 == isNaN(parseInt(f[1])) && parseInt(f[1]) > 0 && a.ajax({ type: "POST", url:  "/Product/Services/CommentService.asmx/GetList", data: { productId: journalOptions.productId, commentType: a(this).parents(".commentpanel").attr("data-type"), parentId: -1, pageNumber: parseInt(f[1]), pageSize: journalOptions.pageSize }, success: function (c) { c.length > 0 && (n.html(c), e != b.location && b.history.pushState({ path: e }, "", e), d.parent().find("a").removeClass("SelectedPage"), d.addClass("SelectedPage"), pluginInit(), a("html, body").animate({ scrollTop: n.offset().top }, 0, "linear")), "undefined" != typeof callback && callback(c) }, error: function (a, b, c) { alert(c) } }) }) } }(jQuery, window), function (a, b) { a.fn.journalComments = function (b) { function n() { confirm(journalOptions.deleteConfirmText) && (jid = a(this).parent().attr("id").replace("cmt-", ""), a.ajax({ type: "POST", url:  "/Product/Services/CommentService.asmx/Delete", data: { commentId: jid }, success: function (a) { }, error: function (a, b, c) { alert(c) } }), a(this).parent().fadeOut(function () { var b = a(this).parent(), c = a(this).attr("id"); a(this).animate({ height: "0" }, 400, function () { b.remove("#" + c) }) })) } function p(b) { if (g.animate({ height: "0" }, 400, function () { i.addClass("disabled"), j.hide(), g.val("").hide(), h.show() }), "" != b && " " != b) { var c = a(b); c.insertBefore("#" + e + " .cmteditarea"), a(c).find(".miniclose").bind("click", n), a(c).find(".cmlike").bind("click", likeComment) } } a.fn.journalComments.defaultOptions = { maxLength: 2e3 }; var c = a.extend({}, a.fn.journalComments.defaultOptions, b), e = a(this).attr("id"), f = c.maxLength, g = a("#" + e + "-txt"), h = a("#" + e + " .editorPlaceholder"), i = a("#" + e + " .cmtbtn a"), j = a("#" + e + " .cmtbtn .cmtinfo"), k = a("#" + e + " .cmtbtn input.cmtname"), l = a("#" + e + " .cmtbtn input.cmtemail"), m = a("#" + e + " .miniclose"); h.unbind("click"), i.unbind("click"), h.click(function () { h.hide(), i.addClass("disabled"), j.show(), g.show().animate({ height: "+=45" }, 400, function () { g.focus(), g.bind("keypress", o) }) }), m.bind("click", n), g.bind("paste", function (a) { setTimeout(function () { if (g.val(g.val()), g.val().length > f) { var a = g.val().substring(0, f); g.val(a) } }, 100), o(a) }); var o = function (a) { i.removeClass("disabled"), g.unbind("keypress", o) }; i.click(function (b) { b.preventDefault(); var c = e.replace("jcmt-", ""), d = {}; d.productId = journalOptions.productId, d.commentId = c, d.Comment = encodeURIComponent(g.val()), d.fullName = encodeURIComponent(k.val()), d.email = encodeURIComponent(l.val()); var f = g.val(); return f = f.replace(/<(?:.|\n)*?>/gm, "").replace(/\s+/g, "").replace(/&nbsp;/g, ""), "" == f ? (alert(journalOptions.contentInvalidText), g.focus(), !1) : "" == d.Comment || "%3Cbr%3E" == d.Comment ? (alert(journalOptions.contentRequiredText), g.focus(), !1) : "" == d.fullName ? (alert(journalOptions.fullNameRequiredText), k.focus(), !1) : void a.ajax({ type: "POST", url:  "/Product/Services/CommentService.asmx/CommentSave", data: { productId: d.productId, commentType: a(this).parents(".commentpanel").attr("data-type"), commentId: d.commentId, fullName: d.fullName, email: d.email, content: d.Comment }, success: function (a) { p(a) }, error: function (a, b, c) { alert(c) } }) }) } }(jQuery, window);
